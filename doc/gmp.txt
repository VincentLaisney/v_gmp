module gmp

fn abs(d &Bigint, s &Bigint)
fn add_u64(mut d Bigint, a Bigint, b u64)
fn addmul(mut d Bigint, a Bigint, b Bigint)
fn addmul_u64(mut d Bigint, a Bigint, b u64)
fn and(mut d Bigint, a Bigint, b Bigint)
fn bin_u64(mut d Bigint, n Bigint, k u64)
fn bin_uiui(mut d Bigint, n u64, k u64)
fn cdiv_q(mut d Bigint, a Bigint, b Bigint)
fn cdiv_q_2exp(mut q Bigint, a Bigint, e u64)
fn cdiv_q_u64(mut q Bigint, a Bigint, b u64) u64
fn cdiv_qr(mut q Bigint, mut r Bigint, n Bigint, d Bigint)
fn cdiv_qr_u64(mut q Bigint, mut r Bigint, n Bigint, d u64) u64
fn cdiv_r(mut r Bigint, n Bigint, d Bigint)
fn cdiv_r_2exp(mut r Bigint, n Bigint, e u64)
fn cdiv_r_u64(mut r Bigint, n Bigint, d u64) u64
fn cdiv_u64(n Bigint, d u64) u64
fn clear(mut a Bigint)
fn clrbit(mut a Bigint, b u64)
fn cmp(a Bigint, b Bigint) int
fn cmp_f64(a Bigint, b f64) int
fn cmp_i64(a Bigint, b i64) int
fn cmp_u64(a Bigint, b u64) int
fn cmpabs(a Bigint, b Bigint) int
fn cmpabs_f64(a Bigint, b f64) int
fn cmpabs_u64(a Bigint, b u64) int
fn com(mut r Bigint, a Bigint)
fn combit(mut r Bigint, b u64)
fn congruent_2exp_p(n Bigint, c Bigint, b u64) int
fn congruent_p(n Bigint, c Bigint, d Bigint) int
fn congruent_ui_p(n Bigint, c u64, d u64) int
fn divexact(q Bigint, n Bigint, d Bigint)
fn divexact_u64(q Bigint, n Bigint, d u64)
fn divisible_2exp_p(n Bigint, b u64) int
fn divisible_p(n Bigint, q Bigint) int
fn divisible_ui_p(n Bigint, q u64) int
fn fac_u64(mut r Bigint, n u64)
fn fdiv_q(mut q Bigint, n Bigint, d Bigint)
fn fdiv_q_2exp(mut q Bigint, n Bigint, b u64)
fn fdiv_q_u64(mut q Bigint, n Bigint, d u64) u64
fn fdiv_qr(mut q Bigint, mut r Bigint, n Bigint, d Bigint)
fn fdiv_qr_u64(mut q Bigint, mut r Bigint, n Bigint, d u64) u64
fn fdiv_r(mut r Bigint, n Bigint, d Bigint)
fn fdiv_r_2exp(mut r Bigint, n Bigint, b u64)
fn fdiv_r_u64(mut r Bigint, n Bigint, d u64) u64
fn fdiv_u64(n Bigint, d u64) u64
fn fib2_u64(mut f Bigint, mut fnsub1 Bigint, n u64)
fn fib_u64(mut f Bigint, n u64)
fn fits_sint_p(n Bigint) int
fn fits_slong_p(n Bigint) int
fn fits_sshort_p(n Bigint) int
fn fits_uint_p(n Bigint) int
fn fits_ulong_p(n Bigint) int
fn fits_ushort_p(n Bigint) int
fn from_f64(f f64) Bigint
fn from_i64(i i64) Bigint
fn from_str(s string) Bigint
fn from_str_base(s string, base int) Bigint
fn from_u64(s u64) Bigint
fn gcd(mut d Bigint, a Bigint, b Bigint)
fn gcd_u64(mut r Bigint, a Bigint, b u64) u64
fn gcdext(mut g Bigint, mut s Bigint, mut t Bigint, a Bigint, b Bigint)
fn get_d_2exp(e &i64, n Bigint) f64
fn hamdist(a Bigint, b Bigint) u64
fn init_set(d Bigint, s Bigint)
fn invert(mut r Bigint, a Bigint, m Bigint) int
fn ior(mut d Bigint, a Bigint, b Bigint)
fn jacobi(a Bigint, b Bigint) int
fn kronecker_i64(a Bigint, b i64) int
fn kronecker_u64(a Bigint, b u64) int
fn lcm(mut d Bigint, a Bigint, b Bigint)
fn lcm_u64(mut r Bigint, a Bigint, b u64)
fn lucnum2_u64(mut l Bigint, mut lsub1 Bigint, n u64)
fn lucnum_u64(mut l Bigint, n u64)
fn mfac_uiui(mut r Bigint, n u64, m u64)
fn millerrabin(m Bigint, n int) int
fn mod(mut r Bigint, n Bigint, d Bigint)
fn mul_2exp(mut r Bigint, a Bigint, b u64)
fn mul_i64(mut r Bigint, a Bigint, b i64)
fn mul_u64(mut r Bigint, a Bigint, b u64)
fn neg(mut r Bigint, a Bigint)
fn new() Bigint
fn nextprime(mut r Bigint, a Bigint)
fn perfect_power_p(s Bigint) int
fn perfect_square_p(s Bigint) int
fn popcount(s Bigint) u64
fn pow_u64(mut r Bigint, b Bigint, e u64)
fn powm(mut r Bigint, b Bigint, e Bigint, m Bigint)
fn powm_sec(mut r Bigint, b Bigint, e Bigint, m Bigint)
fn powm_u64(mut r Bigint, b Bigint, e u64, m Bigint)
fn primorial_u64(mut r Bigint, n u64)
fn probab_prime_p(s Bigint, n int) int
fn randclear(mut s Randstate)
fn randinit_default(mut s Randstate)
fn randinit_lc_2exp(mut s Randstate, a Bigint, c u64, m u64)
fn randinit_lc_2exp_size(mut s Randstate, n u64) int
fn randinit_mt(mut s Randstate)
fn randinit_set(mut d Randstate, s Randstate)
fn randseed(mut s Randstate, b Bigint)
fn randseed_ui(mut s Randstate, n u64)
fn remove(mut r Bigint, o Bigint, f Bigint) u64
fn root(mut r Bigint, o Bigint, n u64) int
fn rootrem(mut root Bigint, mut rem Bigint, u Bigint, n u64)
fn rrandomb(mut r Bigint, mut st Randstate, n u64)
fn scan0(s Bigint, n u64) u64
fn scan1(s Bigint, n u64) u64
fn set(mut a Bigint, b Bigint)
fn set_d(mut a Bigint, b f64)
fn set_i64(mut a Bigint, b i64)
fn set_str(mut a Bigint, s string, base int) int
fn set_u64(mut a Bigint, b u64)
fn setbit(mut a Bigint, b u64)
fn si_kronecker(a i64, b Bigint) int
fn sizeinbase(s Bigint, b int) u64
fn sqrt(mut s Bigint, a Bigint)
fn sqrtrem(mut s Bigint, mut r Bigint, a Bigint)
fn sub_u64(mut d Bigint, a Bigint, b u64)
fn submul(mut a Bigint, b Bigint, c Bigint)
fn submul_u64(mut a Bigint, b Bigint, c u64)
fn swap(mut a Bigint, mut b Bigint)
fn tdiv_q_2exp(mut q Bigint, n Bigint, b u64)
fn tdiv_q_u64(mut q Bigint, n Bigint, d u64) u64
fn tdiv_qr(mut q Bigint, mut r Bigint, n Bigint, d Bigint)
fn tdiv_qr_u64(mut q Bigint, mut r Bigint, n Bigint, d u64) u64
fn tdiv_r_2exp(mut r Bigint, n Bigint, d u64)
fn tdiv_r_u64(mut r Bigint, n Bigint, d u64) u64
fn tdiv_u64(n Bigint, d u64) u64
fn tstbit(a Bigint, b u64) int
fn two_fac_u64(mut r Bigint, n u64)
fn ui_kronecker(a u64, b Bigint) int
fn ui_pow_u64(mut r Bigint, b u64, e u64)
fn ui_sub(mut d Bigint, a u64, b Bigint)
fn urandomb(mut r Bigint, mut s Randstate, n u64)
fn urandomb_ui(mut s Randstate, n u64) u64
fn urandomm(mut r Bigint, mut s Randstate, n Bigint)
fn urandomm_ui(mut s Randstate, n u64) u64
fn xor(mut r Bigint, a Bigint, b Bigint)
fn (a Bigint) + (b Bigint) Bigint
fn (mut a Bigint) inc()
fn (mut a Bigint) dec()
fn (a Bigint) == (b Bigint) bool
fn (a Bigint) < (b Bigint) bool
fn (s Bigint) f64() f64
fn (s Bigint) i64() i64
fn (s Bigint) str_base(base int) string
fn (s Bigint) str() string
fn (s Bigint) u64() u64
fn (a Bigint) * (b Bigint) Bigint
fn (b Bigint) clone() Bigint
fn (a Bigint) isqrt() Bigint
fn (a Bigint) - (b Bigint) Bigint
fn (n Bigint) / (d Bigint) Bigint
fn (n Bigint) % (d Bigint) Bigint
